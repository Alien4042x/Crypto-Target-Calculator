# Form implementation generated from reading ui file 'Crypto Target Calculator.ui'
#
# Created by: PyQt6 UI code generator 6.2.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.

from logging import warning
from PyQt5.QtWidgets import QMessageBox
import clipboard
from PyQt5 import QtCore, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(541, 224)
        MainWindow.setStyleSheet("QWidget#centralwidget{\n"
"background-color: rgb(44, 50, 62);\n"
"}")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.btn_Calculate = QtWidgets.QPushButton(self.centralwidget, clicked = lambda:self.Calculating())
        self.btn_Calculate.setGeometry(QtCore.QRect(400, 130, 100, 32))
        self.btn_Calculate.setStyleSheet("QPushButton{\n"
"color: rgb(255, 255, 255);\n"
"background-color: rgb(255, 80, 123);\n"
"border-radius:5px;\n"
"}\n"
"QPushButton:hover{\n"
"background-color: rgb(28, 38, 45);\n"
"}\n"
"QPushButton:checked{\n"
"background-color: rgb(28, 38, 45);\n"
"}\n"
"QPushButton:unchecked{\n"
"background-color: rgb(255, 80, 123);\n"
"}")
        self.btn_Calculate.setObjectName("btn_Calculate")
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setGeometry(QtCore.QRect(10, 100, 341, 91))
        self.groupBox.setStyleSheet("QGroupBox{\n"
"    color: rgb(255, 255, 255);\n"
"    border: 1px solid rgb(29, 43, 51);\n"
"    border-radius:3px;\n"
"}")
        self.groupBox.setObjectName("groupBox")
        self.stop_loss_box = QtWidgets.QLineEdit(self.groupBox)
        self.stop_loss_box.setGeometry(QtCore.QRect(220, 50, 113, 21))
        self.stop_loss_box.setStyleSheet("QLineEdit{\n"
"    color: rgb(255, 255, 255);\n"
"    background-color: rgb(29, 43, 51);\n"
"    border: 1px solid black;\n"
"}")
        self.stop_loss_box.setObjectName("stop_loss_box")
        self.take_profit_box = QtWidgets.QLineEdit(self.groupBox)
        self.take_profit_box.setGeometry(QtCore.QRect(10, 50, 113, 21))
        self.take_profit_box.setStyleSheet("QLineEdit{\n"
"    color: rgb(255, 255, 255);\n"
"    background-color: rgb(29, 43, 51);\n"
"    border: 1px solid black;\n"
"}")
        self.take_profit_box.setObjectName("take_profit_box")
        self.label = QtWidgets.QLabel(self.groupBox)
        self.label.setGeometry(QtCore.QRect(10, 30, 71, 16))
        self.label.setStyleSheet("QLabel{\n"
"    color: rgb(255, 255, 255);\n"
"}")
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.groupBox)
        self.label_2.setGeometry(QtCore.QRect(220, 30, 71, 16))
        self.label_2.setStyleSheet("QLabel{\n"
"    color: rgb(255, 255, 255);\n"
"}")
        self.label_2.setObjectName("label_2")
        self.btn_Long = QtWidgets.QPushButton(self.centralwidget, clicked = lambda:self.Long())
        self.btn_Long.setGeometry(QtCore.QRect(10, 10, 100, 32))
        self.btn_Long.setStyleSheet("QPushButton{\n"
"color: rgb(255, 255, 255);\n"
"background-color: rgb(255, 80, 123);\n"
"border-radius:0px;\n"
"}\n"
"QPushButton:hover{\n"
"background-color: rgb(28, 38, 45);\n"
"}\n"
"QPushButton:checked{\n"
"background-color: rgb(28, 38, 45);\n"
"}\n"
"QPushButton:unchecked{\n"
"background-color: rgb(255, 80, 123);\n"
"}")
        self.btn_Long.setCheckable(True)
        self.btn_Long.setChecked(True)
        self.btn_Long.setObjectName("btn_Long")
        self.btn_Short = QtWidgets.QPushButton(self.centralwidget, clicked = lambda:self.Short())
        self.btn_Short.setGeometry(QtCore.QRect(110, 10, 100, 32))
        self.btn_Short.setStyleSheet("QPushButton{\n"
"color: rgb(255, 255, 255);\n"
"background-color: rgb(255, 80, 123);\n"
"border-radius:0px;\n"
"}\n"
"QPushButton:hover{\n"
"background-color: rgb(28, 38, 45);\n"
"}\n"
"QPushButton:checked{\n"
"background-color: rgb(28, 38, 45);\n"
"}\n"
"QPushButton:unchecked{\n"
"background-color: rgb(255, 80, 123);\n"
"}")
        self.btn_Short.setCheckable(True)
        self.btn_Short.setChecked(False)
        self.btn_Short.setObjectName("btn_Short")
        self.groupBox_2 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_2.setGeometry(QtCore.QRect(220, 10, 311, 81))
        self.groupBox_2.setStyleSheet("QGroupBox{\n"
"    color: rgb(255, 255, 255);\n"
"    border: 1px solid rgb(29, 43, 51);\n"
"    border-radius:3px;\n"
"}")
        self.groupBox_2.setObjectName("groupBox_2")
        self.label_3 = QtWidgets.QLabel(self.groupBox_2)
        self.label_3.setGeometry(QtCore.QRect(10, 20, 71, 16))
        self.label_3.setStyleSheet("QLabel{\n"
"    color: rgb(255, 255, 255);\n"
"}")
        self.label_3.setObjectName("label_3")
        self.result_stop_loss = QtWidgets.QLineEdit(self.groupBox_2)
        self.result_stop_loss.setGeometry(QtCore.QRect(160, 40, 113, 21))
        self.result_stop_loss.setStyleSheet("QLineEdit{\n"
"    color: rgb(255, 255, 255);\n"
"    background-color: rgb(29, 43, 51);\n"
"    border: 1px solid black;\n"
"}")
        self.result_stop_loss.setObjectName("result_stop_loss")
        self.result_take_profit = QtWidgets.QLineEdit(self.groupBox_2)
        self.result_take_profit.setGeometry(QtCore.QRect(10, 40, 113, 21))
        self.result_take_profit.setStyleSheet("QLineEdit{\n"
"    color: rgb(255, 255, 255);\n"
"    background-color: rgb(29, 43, 51);\n"
"    border: 1px solid black;\n"
"}")
        self.result_take_profit.setText("")
        self.result_take_profit.setObjectName("result_take_profit")
        self.label_4 = QtWidgets.QLabel(self.groupBox_2)
        self.label_4.setGeometry(QtCore.QRect(160, 20, 71, 16))
        self.label_4.setStyleSheet("QLabel{\n"
"    color: rgb(255, 255, 255);\n"
"}")
        self.label_4.setObjectName("label_4")
        self.take_profit_copy = QtWidgets.QPushButton(self.groupBox_2, clicked = lambda:self.btn_profit_copy())
        self.take_profit_copy.setGeometry(QtCore.QRect(130, 40, 21, 21))
        self.take_profit_copy.setStyleSheet("QPushButton{\n"
"border-radius:5px;\n"
"}\n"
"QPushButton:hover{\n"
"background-color: rgb(28, 38, 45);\n"
"}\n"
"QPushButton:checked{\n"
"background-color: rgb(28, 38, 45);\n"
"}")
        self.take_profit_copy.setText(" ðŸ“‘")
        self.take_profit_copy.setToolTip("Copy")
        self.take_profit_copy.setObjectName("take_profit_copy")
        self.stop_loss_copy = QtWidgets.QPushButton(self.groupBox_2, clicked = lambda:self.btn_stop_loss_copy())
        self.stop_loss_copy.setGeometry(QtCore.QRect(280, 40, 21, 21))
        self.stop_loss_copy.setStyleSheet("QPushButton{\n"
"border-radius:5px;\n"
"}\n"
"QPushButton:hover{\n"
"background-color: rgb(28, 38, 45);\n"
"}\n"
"QPushButton:checked{\n"
"background-color: rgb(28, 38, 45);\n"
"}")
        self.stop_loss_copy.setText(" ðŸ“‘")
        self.stop_loss_copy.setToolTip("Copy")
        self.stop_loss_copy.setObjectName("stop_loss_copy")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(16, 55, 71, 16))
        self.label_5.setStyleSheet("QLabel{\n"
"    color: rgb(255, 255, 255);\n"
"}")
        self.label_5.setObjectName("label_5")
        self.entry_line_box = QtWidgets.QLineEdit(self.centralwidget)
        self.entry_line_box.setGeometry(QtCore.QRect(96, 53, 113, 21))
        self.entry_line_box.setStyleSheet("QLineEdit{\n"
"    color: rgb(255, 255, 255);\n"
"    background-color: rgb(29, 43, 51);\n"
"    border: 1px solid black;\n"
"}")
        self.entry_line_box.setText("")
        self.entry_line_box.setObjectName("entry_line_box")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(10, 200, 141, 16))
        self.label_6.setStyleSheet("QLabel{\n"
"    color: rgb(255, 255, 255);\n"
"}")
        self.label_6.setObjectName("label_6")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Crypto Target Calculator"))
        self.btn_Calculate.setText(_translate("MainWindow", "Calculate"))
        self.groupBox.setTitle(_translate("MainWindow", "Risk/Reward Ratio"))
        self.stop_loss_box.setText(_translate("MainWindow", "0.996"))
        self.take_profit_box.setText(_translate("MainWindow", "1.005"))
        self.label.setText(_translate("MainWindow", "Target:"))
        self.label_2.setText(_translate("MainWindow", "Stop:"))
        self.btn_Long.setText(_translate("MainWindow", "Long"))
        self.btn_Short.setText(_translate("MainWindow", "Short"))
        self.groupBox_2.setTitle(_translate("MainWindow", "Result"))
        self.label_3.setText(_translate("MainWindow", "Take Profit:"))
        self.label_4.setText(_translate("MainWindow", "Stop Loss:"))
        self.label_5.setText(_translate("MainWindow", "Entry Price:"))
        self.label_6.setText(_translate("MainWindow", "Program by Alien4042x"))

    def Long(self):
        if(self.btn_Short.isChecked() == True):
                self.btn_Short.setChecked(False)
        else:
                self.btn_Long.setChecked(True)
        
        self.take_profit_box.setText("1.005")
        self.stop_loss_box.setText("0.996")

    def Short(self):
        if(self.btn_Long.isChecked() == True):
                self.btn_Long.setChecked(False)
        else:
                self.btn_Short.setChecked(True)
        
        self.take_profit_box.setText("0.995")
        self.stop_loss_box.setText("1.004")

    def btn_profit_copy(self):
            clipboard.copy(str(self.result_take_profit.text()))

    def btn_stop_loss_copy(self):
            clipboard.copy(str(self.result_stop_loss.text()))

    def Calculating(self):
        try:
                if self.entry_line_box.text() == "":
                        self.result_take_profit.setText("")
                        self.result_stop_loss.setText("")
                        return
                else:
                        entry_price = float(self.entry_line_box.text())
                        if(self.btn_Long.isChecked() == True):
                                take_profit = float(self.take_profit_box.text())
                                stop_loss = float(self.stop_loss_box.text())
                                self.result_take_profit.setText(format(entry_price * take_profit, '.2f'))
                                self.result_stop_loss.setText(format(entry_price * stop_loss, '.2f'))
                        elif(self.btn_Short.isChecked() == True):
                                take_profit = float(self.take_profit_box.text())
                                stop_loss = float(self.stop_loss_box.text())
                                self.result_take_profit.setText(format(entry_price * take_profit, '.2f'))
                                self.result_stop_loss.setText(format(entry_price * stop_loss, '.2f'))
        except:
                msgBox = QMessageBox()
                msgBox.setText("Warning")
                msgBox.setInformativeText("Only numbers are allowed in the field")
                ret = msgBox.exec()

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
